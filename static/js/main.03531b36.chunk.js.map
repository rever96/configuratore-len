{"version":3,"sources":["assets/1.jpg","assets/2.png","components/headbar/headbar.component.jsx","components/footer/footer.js","components/configuratore/passo.component.jsx","actions.js","components/riassunto/riassunto_end.component.jsx","components/configuratore/configuratore.component.jsx","reducers/config.js","components/bottone/bottone-start.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","connect","state","opzioniScelte","props","className","indice","totale","style","color","costoTotale","onClick","onPrevClick","console","log","position","bottom","width","zIndex","Array","keys","map","key","Card","onItemClick","value","descrizione","prezzo","toString","replace","domanda","dispatch","index","totaleDomande","store","getState","optionClicked","reduce","accumulator","currentValue","opzioneScelta","type","titolo","opzioni","length","setTimeout","nextPasso","handleClick","justify","align","level","action","method","encType","autoComplete","placeholder","name","opzione","id","end","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","storeConfig","createStore","slice","Configuratore","subscribe","setIndex","configJson","Bottonestart","useState","src","alt","App","backgroundImage","img1","img2","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03531b36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.a875457c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.c2b55d2a.png\";","import './headbar.css';\n\nimport { connect } from 'react-redux';\nimport React from 'react';\n\nconst Headbar = (props) => {\n  return (\n    <>\n      <span className='center-top '>\n        {props.indice} / {props.totale}\n      </span>\n      <span style={{ color: '#0f0' }} className='right-top'>\n        {props.costoTotale} euro\n      </span>\n      <span className='left-top' onClick={() => props.onPrevClick()}>\n        {'< indietro'}\n      </span>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  opzioniScelte: state,\n});\n\nexport default connect(mapStateToProps)(Headbar);\n\n// import './headbar.css';\n// import { connect } from 'react-redux';\n// import React from 'react';\n\n// const Headbar = ({ opzioniScelte }) => {\n//   console.log(opzioniScelte);\n//   return (\n//     <>\n//       <span className=\"center-top \">\n//         {props.indice} / {props.totale}\n//       </span>\n//       <span className=\"right-top\"></span>\n//       <span className=\"left-top\" onClick={() => props.onPrevClick()}>\n//         torna alla domanda precedente\n//       </span>\n//     </>\n//   );\n// };\n\n// const mapStateToProps = state => ({\n//   opzioniScelte: state\n// });\n\n// export default connect(mapStateToProps)(Headbar);\n","import './footer.css';\n\nimport { connect } from 'react-redux';\nimport React from 'react';\n\nconst Headbar = (props) => {\n  console.log(props);\n  return (\n    <>\n      <div\n        style={{\n          position: 'absolute',\n          bottom: '10px',\n          width: '45vw',\n          zIndex: '1',\n        }}\n      >\n        <ul className='progressbar'>\n          {[...Array(props.totale).keys()].map((key) =>\n            props.indice > key ? (\n              <li\n                style={{ width: 100 / props.totale + '%' }}\n                className='active'\n                key={key}\n              ></li>\n            ) : (\n              <li style={{ width: 100 / props.totale + '%' }} key={key}></li>\n            )\n          )}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  opzioniScelte: state,\n});\n\nexport default connect(mapStateToProps)(Headbar);\n","import './card.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { nextPasso, prevPasso } from '../../actions';\nimport Headbar from '../headbar/headbar.component';\nimport Footbar from '../footer/footer';\n\nconst Passo = ({ domanda, dispatch, index, totaleDomande, store }) => {\n  console.log(store.getState());\n\n  let optionClicked = false;\n\n  function handleClick(value, titolo) {\n    if (optionClicked) {\n      return;\n    }\n    optionClicked = true;\n    console.log(value);\n    setTimeout(() => {\n      optionClicked = false;\n      dispatch(nextPasso(value, titolo));\n    }, 500);\n  }\n\n  return (\n    <>\n      <Headbar\n        costoTotale={store\n          .getState()\n          .reduce(\n            (accumulator, currentValue) =>\n              accumulator + currentValue.opzioneScelta.prezzo,\n            0\n          )\n          .toString()\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')}\n        totale={totaleDomande}\n        indice={index + 1}\n        onPrevClick={() => dispatch(prevPasso())}\n      />\n      <section className='section question'>\n        <h2>{domanda.titolo}</h2>\n        <div className={'answer-group row-of-' + domanda.opzioni.length}>\n          {domanda.opzioni.map((value, key) => {\n            return (\n              <Card\n                key={key}\n                value={value}\n                onItemClick={() => handleClick(value, domanda.titolo)}\n              />\n            );\n          })}\n        </div>\n      </section>\n      <Footbar totale={totaleDomande} indice={index}></Footbar>\n    </>\n  );\n};\n\nconst Card = (props) => {\n  return (\n    <div className='col'>\n      <div\n        className='answer js--answer button'\n        onClick={() => props.onItemClick()}\n      >\n        <div>\n          <div className='answer-text'>{props.value.descrizione}</div>\n          <div className='answer-text'>\n            {props.value.prezzo\n              .toString()\n              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.') + 'â‚¬'}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default connect()(Passo);\n","export const nextPasso = (opzioneScelta, domanda) => ({\n  type: 'NEXT',\n  domanda,\n  opzioneScelta\n});\n\nexport const prevPasso = () => ({\n  type: 'PREV'\n});\n\nexport const reset = () => ({\n  type: 'INIT'\n});\n","import React from 'react';\nimport './riassunto_end.scss';\nimport { reset } from '../../actions';\nimport { connect } from 'react-redux';\n\nconst RiassuntoEnd = (props) => {\n  function ricomincia() {\n    props.end();\n    props.dispatch(reset());\n  }\n\n  console.log(props.store.getState());\n\n  return (\n    <>\n      <div style={{ width: '100%' }} justify='center' align='top'>\n        <div>\n          <h1 style={{ color: '#fff' }}>Completato!</h1>\n          <h2 style={{ color: '#fff' }}>\n            Totale preventivo{' '}\n            <span style={{ color: '#0f0' }}>\n              â‚¬{' '}\n              {props.store\n                .getState()\n                .reduce(\n                  (accumulator, currentValue) =>\n                    accumulator + currentValue.opzioneScelta.prezzo,\n                  0\n                )\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')}\n            </span>\n          </h2>\n          <h2 style={{ color: '#fff' }} level={2}>\n            Contattaci per definire il progetto!\n          </h2>\n        </div>\n      </div>\n\n      <div className='container'>\n        <form\n          action='mailto:info@infiniteofficine.com'\n          method='post'\n          className='form'\n          encType='text/plain'\n        >\n          <input\n            autoComplete='new-password'\n            type='text'\n            placeholder='Nominativo'\n            name='nominativo'\n          />\n          <input\n            autoComplete='new-password'\n            type='email'\n            name='email'\n            placeholder='Email'\n          />\n          <input type='text' placeholder='Oggetto' name='oggetto' />\n          <input\n            name='configurazione'\n            type='hidden'\n            value={props.store\n              .getState()\n              .map((opzione, key) => {\n                return (\n                  opzione.domanda + ': ' + opzione.opzioneScelta.descrizione\n                );\n              })\n              .toString()}\n          ></input>\n          <textarea placeholder='Contenuto' name='contenuto' />\n          <button type='submit' id='login-button'>\n            Contattaci\n          </button>\n        </form>\n      </div>\n      <div style={{ position: 'absolute', bottom: '30px' }}>\n        <button onClick={ricomincia} className='button'>\n          Ricomincia\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default connect()(RiassuntoEnd);\n","import './card.css';\nimport React from 'react';\nimport configJson from '../../assets/config.json';\nimport MioPasso from './passo.component';\nimport { createStore, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reduceConfig } from '../../reducers/config';\nimport RiassuntoEnd from '../riassunto/riassunto_end.component';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet storeConfig = createStore(reduceConfig, composeEnhancers());\n\nexport const Configuratore = props => {\n  storeConfig.subscribe(() => {\n    props.setIndex(storeConfig.getState().length);\n  });\n\n  if (props.index === configJson.length) {\n    return (\n      <>\n        <RiassuntoEnd store={storeConfig} end={props.end}></RiassuntoEnd>\n      </>\n    );\n  } else {\n    return (\n      <Provider store={storeConfig}>\n        <MioPasso\n          store={storeConfig}\n          totaleDomande={configJson.length}\n          index={props.index}\n          domanda={configJson[props.index]}\n        />\n      </Provider>\n    );\n  }\n};\n","export const reduceConfig = (state = [], action) => {\n  switch (action.type) {\n    case 'NEXT':\n      return [\n        ...state,\n        {\n          domanda: action.domanda,\n          opzioneScelta: action.opzioneScelta\n        }\n      ];\n    case 'PREV':\n      return state.slice(0, state.length - 1);\n    case 'INIT':\n      return [];\n    default:\n      return state;\n  }\n};\n","import React, { useState } from 'react';\n\nimport './bottone.css';\nimport { Configuratore } from '../configuratore/configuratore.component';\n\nexport function Bottonestart() {\n  const [index, setIndex] = useState(-1);\n  function start() {\n    setIndex(0);\n  }\n\n  function reset() {\n    setIndex(-1);\n  }\n\n  if (index === -1) {\n    return (\n      <>\n        <img className='intro-image' src='intro.png' alt=''></img>\n        <h1 className='title'>\n          Quanto costa aprire il tuo <strong>E-commerce</strong>?\n        </h1>\n        <p className='subtitle'>\n          Calcola rapidamente il costo per creare il tuo{' '}\n          <strong>negozio online</strong>, rispondendo a dieci semplici domande.\n        </p>\n        <button onClick={start} className='button'>\n          Raccontaci\n        </button>\n      </>\n    );\n  } else {\n    return (\n      <Configuratore\n        index={index}\n        setIndex={setIndex}\n        end={reset}\n        className='Component'\n      ></Configuratore>\n    );\n  }\n}\n\nexport default Bottonestart;\n","import React from 'react';\nimport { Component } from 'react';\nimport './App.scss';\nimport Bottonestart from './components/bottone/bottone-start.component';\n\nimport img1 from './assets/1.jpg';\nimport img2 from './assets/2.png';\n\nclass App extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${img1})`,\n        }}\n        className='App'\n      >\n        <header className='App-header'>\n          <div\n            className='logo'\n            style={{\n              backgroundImage: `url(${img2})`,\n            }}\n          ></div>\n          <Bottonestart></Bottonestart>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import 'antd/dist/antd.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}