{"version":3,"sources":["components/footer/footer.js","components/configuratore/passo.component.jsx","actions.js","components/riassunto/riassunto_end.component.jsx","components/configuratore/configuratore.component.jsx","reducers/config.js","components/bottone/bottone-start.component.jsx","App.js","serviceWorker.js","index.js"],"names":["connect","state","opzioniScelte","props","isMobile","window","innerWidth","style","position","bottom","width","zIndex","className","Array","totale","keys","map","key","indice","Card","display","marginLeft","marginRight","impostazioni","textStyle","minWidth","onClick","onItemClick","value","descrizione","marginTop","prezzo","toString","replace","domanda","dispatch","index","totaleDomande","store","optionClicked","backgroundImage","process","background","top","left","height","backgroundRepeat","backgroundSize","backgroundPosition","immagine","ReactHtmlParser","titolo","textAlign","opzioni","length","setTimeout","opzioneScelta","type","nextPasso","handleClick","getState","reduce","accumulator","currentValue","RiassuntoEnd","ricomincia","end","pp","this","justify","align","color","level","action","method","encType","autoComplete","placeholder","name","opzione","split","join","href","checked","onChange","v","setState","id","disabled","React","Component","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","storeConfig","createStore","slice","Configuratore","subscribe","setIndex","domandeJson","Bottonestart","useState","App","fetch","headers","Accept","then","r","json","document","onkeydown","e","keyCode","ctrlKey","shiftKey","charCodeAt","addEventListener","preventDefault","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05a8ce0d.chunk.js","sourcesContent":["import './footer.css';\n\nimport { connect } from 'react-redux';\nimport React from 'react';\n\nconst Headbar = (props) => {\n  const isMobile = window.innerWidth <= 700;\n  return (\n    <>\n      {!isMobile && (\n        <div\n          style={{\n            position: 'absolute',\n            bottom: '15%',\n            width: '45vw',\n            zIndex: '1',\n          }}\n        >\n          <ul className='progressbar'>\n            {[...Array(props.totale).keys()].map((key) =>\n              props.indice > key ? (\n                <li\n                  style={{ width: 100 / props.totale + '%' }}\n                  className='active'\n                  key={key}\n                ></li>\n              ) : (\n                <li style={{ width: 100 / props.totale + '%' }} key={key}></li>\n              )\n            )}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  opzioniScelte: state,\n});\n\nexport default connect(mapStateToProps)(Headbar);\n","import './card.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { nextPasso } from '../../actions';\nimport Footbar from '../footer/footer';\n\nimport ReactHtmlParser from 'react-html-parser';\n\nconst Passo = (props) => {\n  const isMobile = window.innerWidth <= 700;\n  const { domanda, dispatch, index, totaleDomande, store } = props;\n  let optionClicked = false;\n\n  function handleClick(value, titolo) {\n    if (optionClicked) {\n      return;\n    }\n    optionClicked = true;\n    setTimeout(() => {\n      optionClicked = false;\n      dispatch(nextPasso(value, titolo));\n    }, 100);\n  }\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundImage: `url(${\n            process.env.PUBLIC_URL + '/assets/images/' + domanda.background\n          })`,\n          zIndex: '0',\n          position: 'absolute',\n          top: '0px',\n          left: '0px',\n          width: '100vw',\n          height: '100vh',\n          backgroundRepeat: 'no-repeat',\n          backgroundSize: 'contain',\n          backgroundPosition: 'center',\n          background: '#00000000',\n        }}\n      ></div>\n      <div\n        className='logo'\n        style={{\n          backgroundImage: `url(${\n            process.env.PUBLIC_URL + '/assets/images/' + domanda.immagine\n          })`,\n        }}\n      ></div>\n      <section\n        style={{ position: 'sticky', top: '50%' }}\n        className='section question'\n      >\n        <div style={{ ...props.impostazioni.textStyle }}>\n          {ReactHtmlParser(domanda.titolo)}\n        </div>\n        <div\n          style={{ textAlign: 'center' }}\n          className={'answer-group row-of-' + domanda.opzioni.length}\n        >\n          {domanda.opzioni.map((value, key) => {\n            return (\n              <Card\n                {...props}\n                key={key}\n                value={value}\n                onItemClick={() => handleClick(value, domanda.titolo)}\n              />\n            );\n          })}\n        </div>\n      </section>\n      <Footbar totale={totaleDomande} indice={index}></Footbar>\n      {isMobile && (\n        <div\n          style={{\n            position: 'absolute',\n            top: '10px',\n            ...props.impostazioni.textStyle,\n          }}\n        >\n          <div>\n            {' '}\n            {index}/{totaleDomande}{' '}\n          </div>\n          Totale parziale €{' '}\n          {store\n            .getState()\n            .reduce(\n              (accumulator, currentValue) =>\n                accumulator + currentValue.opzioneScelta.prezzo,\n              0\n            )\n            .toString()\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')}\n        </div>\n      )}\n      {!isMobile && (\n        <div\n          style={{\n            position: 'absolute',\n            bottom: '5%',\n            ...props.impostazioni.textStyle,\n          }}\n        >\n          Totale parziale €{' '}\n          {store\n            .getState()\n            .reduce(\n              (accumulator, currentValue) =>\n                accumulator + currentValue.opzioneScelta.prezzo,\n              0\n            )\n            .toString()\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')}\n        </div>\n      )}\n    </>\n  );\n};\n\nconst Card = (props) => {\n  return (\n    <div\n      className='col'\n      style={{\n        display: 'inline-block',\n        marginLeft: '10px',\n        marginRight: '10px',\n        ...props.impostazioni.textStyle,\n      }}\n    >\n      <div style={{ minWidth: '200px', ...props.impostazioni.textStyle }}>\n        <div\n          style={{ ...props.impostazioni.textStyle }}\n          className='button'\n          onClick={() => props.onItemClick()}\n        >\n          {props.value.descrizione}\n        </div>\n        <div\n          style={{\n            marginTop: '15px',\n            ...props.impostazioni.textStyle,\n          }}\n        >\n          {props.value.prezzo.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.') +\n            '€'}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default connect()(Passo);\n","export const nextPasso = (opzioneScelta, domanda) => ({\n  type: 'NEXT',\n  domanda,\n  opzioneScelta\n});\n\nexport const prevPasso = () => ({\n  type: 'PREV'\n});\n\nexport const reset = () => ({\n  type: 'INIT'\n});\n","import React from 'react';\nimport './riassunto_end.scss';\nimport { reset } from '../../actions';\nimport { connect } from 'react-redux';\n\nclass RiassuntoEnd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pp: false,\n    };\n  }\n  ricomincia = () => {\n    this.props.end();\n    this.props.dispatch(reset());\n  };\n\n  render() {\n    return (\n      <>\n        <div\n          style={{ width: '100%', ...this.props.impostazioni.textStyle }}\n          justify='center'\n          align='top'\n        >\n          <div>\n            <h1 style={{ color: '#fff', ...this.props.impostazioni.textStyle }}>\n              Completato!\n            </h1>\n            <h2 style={{ color: '#fff', ...this.props.impostazioni.textStyle }}>\n              Totale preventivo{' '}\n              <span style={{ color: '#0f0' }}>\n                €{' '}\n                {this.props.store\n                  .getState()\n                  .reduce(\n                    (accumulator, currentValue) =>\n                      accumulator + currentValue.opzioneScelta.prezzo,\n                    0\n                  )\n                  .toString()\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')}\n              </span>\n            </h2>\n            <h2\n              style={{ color: '#fff', ...this.props.impostazioni.textStyle }}\n              level={2}\n            >\n              Contattaci per definire il progetto!\n            </h2>\n          </div>\n        </div>\n\n        <div className='container'>\n          <form\n            action='mailto:info@infiniteofficine.com'\n            method='post'\n            className='form'\n            encType='text/plain'\n          >\n            <input\n              autoComplete='new-password'\n              type='text'\n              placeholder='Nominativo'\n              name='nominativo'\n            />\n            <input\n              autoComplete='new-password'\n              type='email'\n              name='email'\n              placeholder='Email'\n            />\n            <input type='text' placeholder='Oggetto' name='oggetto' />\n            <input\n              name='configurazione'\n              type='hidden'\n              value={this.props.store\n                .getState()\n                .map((opzione, key) => {\n                  return (\n                    ' - ' +\n                    opzione.domanda +\n                    ': ' +\n                    opzione.opzioneScelta.descrizione +\n                    '\\n'\n                  );\n                })\n                .toString()\n                .split(',')\n                .join('')}\n            ></input>\n            <textarea placeholder='Contenuto' name='contenuto' />\n            <label className='container1'>\n              Acconsento al trattamento dei dati come descritto nella{' '}\n              <a href='https://www.infiniteofficine.com/IO/privacy-policy.html'>\n                privacy policy\n              </a>\n              <input\n                type='checkbox'\n                checked={this.state.pp ? 'checked' : false}\n                onChange={(v) => {\n                  this.setState({\n                    pp: !this.state.pp,\n                  });\n                }}\n              />\n              <span className='checkmark'></span>\n            </label>\n            {this.state.pp && (\n              <button\n                style={{ ...this.props.impostazioni.textStyle }}\n                type='submit'\n                className='button'\n                id='login-button'\n              >\n                Contattaci\n              </button>\n            )}\n            {!this.state.pp && (\n              <button\n                style={{ ...this.props.impostazioni.textStyle }}\n                type='submit'\n                id='login-button'\n                className='button'\n                disabled\n              >\n                Contattaci\n              </button>\n            )}\n            <button\n              style={{\n                ...this.props.impostazioni.textStyle,\n                marginLeft: '10px',\n              }}\n              onClick={this.ricomincia}\n              className='button'\n            >\n              Ricomincia\n            </button>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect()(RiassuntoEnd);\n","import './card.css';\nimport React from 'react';\nimport MioPasso from './passo.component';\nimport { createStore, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reduceConfig } from '../../reducers/config';\nimport RiassuntoEnd from '../riassunto/riassunto_end.component';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet storeConfig = createStore(reduceConfig, composeEnhancers());\n\nexport const Configuratore = (props) => {\n  storeConfig.subscribe(() => {\n    props.setIndex(storeConfig.getState().length);\n  });\n\n  if (props.index === props.domandeJson.length) {\n    return (\n      <>\n        <RiassuntoEnd store={storeConfig} {...props}></RiassuntoEnd>\n      </>\n    );\n  } else {\n    return (\n      <Provider store={storeConfig}>\n        <MioPasso\n          store={storeConfig}\n          totaleDomande={props.domandeJson.length}\n          {...props}\n          domanda={props.domandeJson[props.index]}\n        />\n      </Provider>\n    );\n  }\n};\n","export const reduceConfig = (state = [], action) => {\n  switch (action.type) {\n    case 'NEXT':\n      return [\n        ...state,\n        {\n          domanda: action.domanda,\n          opzioneScelta: action.opzioneScelta\n        }\n      ];\n    case 'PREV':\n      return state.slice(0, state.length - 1);\n    case 'INIT':\n      return [];\n    default:\n      return state;\n  }\n};\n","import React, { useState } from 'react';\n\nimport './bottone.css';\nimport { Configuratore } from '../configuratore/configuratore.component';\n\nexport function Bottonestart(props) {\n  const [index, setIndex] = useState(-1);\n  function start() {\n    setIndex(0);\n  }\n\n  function reset() {\n    setIndex(-1);\n  }\n\n  if (index === -1) {\n    return (\n      <>\n        <div\n          className='logo'\n          style={{\n            backgroundImage: `url(${\n              process.env.PUBLIC_URL + '/assets/images/Copertina__Mano_001.png'\n            })`,\n          }}\n        ></div>\n        <h1 style={{ ...props.impostazioni.textStyle }} className='title'>\n          Quanto costa aprire il tuo <strong>E-commerce</strong>?\n        </h1>\n        <p style={{ ...props.impostazioni.textStyle }} className='subtitle'>\n          Crea un preventivo gratuito per il tuo{' '}\n          <strong> negozio online</strong>, seguendo sei semplici passaggi:\n        </p>\n        <button\n          style={{ ...props.impostazioni.textStyle }}\n          onClick={start}\n          className='button'\n        >\n          Inizia ora!\n        </button>\n      </>\n    );\n  } else {\n    return (\n      <Configuratore\n        index={index}\n        setIndex={setIndex}\n        end={reset}\n        className='Component'\n        {...props}\n      ></Configuratore>\n    );\n  }\n}\n\nexport default Bottonestart;\n","import React from 'react';\nimport { Component } from 'react';\nimport './App.scss';\nimport Bottonestart from './components/bottone/bottone-start.component';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      domandeJson: null,\n      impostazioni: {},\n    };\n\n    fetch('assets/domande.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then((r) => r.json())\n      .then((domandeJson) => {\n        this.setState({\n          domandeJson,\n        });\n      });\n    fetch('assets/impostazioni.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n      .then((r) => r.json())\n      .then((impostazioni) => {\n        this.setState({\n          impostazioni,\n        });\n      });\n  }\n\n  componentDidMount() {\n    document.onkeydown = function (e) {\n      if (e.keyCode === 123) {\n        return false;\n      }\n      if (e.ctrlKey && e.shiftKey && e.keyCode === 'I'.charCodeAt(0)) {\n        return false;\n      }\n      if (e.ctrlKey && e.shiftKey && e.keyCode === 'C'.charCodeAt(0)) {\n        return false;\n      }\n      if (e.ctrlKey && e.shiftKey && e.keyCode === 'J'.charCodeAt(0)) {\n        return false;\n      }\n      if (e.ctrlKey && e.keyCode === 'U'.charCodeAt(0)) {\n        return false;\n      }\n    };\n    document.addEventListener('contextmenu', function (e) {\n      e.preventDefault();\n    });\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${\n            process.env.PUBLIC_URL + '/assets/images/background.jpg'\n          })`,\n          height: '100%',\n        }}\n        className='App'\n      >\n        <header className='App-header'>\n          <Bottonestart\n            impostazioni={this.state.impostazioni}\n            domandeJson={this.state.domandeJson}\n          ></Bottonestart>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import 'antd/dist/antd.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}